This file describes how I manage development of backscratcher.

Directories and Files
(Starred entries are not in git)

    ~/Dropbox/prj/backscratcher/DODO.org*
        Where I keep track of what I'm doing and what I want to do next.

    LICENSE
        What the name says.

    MANIFEST.in
        Input to setup.py about what to include in the distribution package

    README.md
        Markdown source for README. Copied to README as part of installation.

    TAGS*
        Emacs tags file for navigating the source code.

    attic*
        A place to stick stuff I don't want in the package but I'm not
        yet ready to throw away.

    bscr
        Where the .py files of package bscr reside.

    bscr/test
        Where the package tests reside.

    cmsg*
        A place to compose commit messages.

    ~/Dropbox/prj/backscratcher/dev.README*
        This file. It may wind up in git yet.

    dist
        Where setup.py puts generated distribution files.

    githooks
        git hooks provided with the repo. Run 'githooks/links' to
        manage the hooks:
            githooks/links make   - install the hooks
            githooks/links rm     - remove the hooks
            githooks/links show   - check the hooks

    nose.cfg
        Config file for nosetests.

    requirements.txt
        setup.py uses this to know what prereqs must be installed so
        backscratcher will work. 

    setup.py
        The standard python package management script.



Tests go in directory bscr/tests in files called test_COMPONENT.py.

To run the tests, use one of

  py.test [-v] [-x] [bscr/test] [-k regexp] (preferred)
  green [-v] [bscr/test]
  nosetests [-v] [-x] [bscr/test]

Test options:
  -v    verbose output (list tests as they are run)
  -x    fast fail: give up on first failure (green doesn't have this)
  -k    only run tests whose names match the regexp (py.test only)

To generate a distribution tarball

  python setup sdist

To install the package, use one of

  pip install https://github.com/tbarron/backscratcher/zipball/<branch>
  pip install .

To install a new one over the top of an old one, use one of

  pip install --upgrade \
      https://github.com/tbarron/backscratcher/zipball/<branch>
  pip install --upgrade .

To uninstall

  pip uninstall backscratcher

For general use on this machine:

  deactivate
  sudo pip install [--upgrade] .

For testing from the git repo:

  activate bscr
  pip install [--upgrade] .


Development/Release Process

 * git checkout master

   Branch master should always be at a major version -- one that ends
   in '0' (e.g., 2014.0913.0).

 * git checkout -b FEATURE

   At each commit, the pre-commit hook enforces updating the version
   -- 2014.0913.0 -> 2014.0913.1 -> .2 -> .3, etc.

 * Get things working the way you want in the feature branch, with all
   the tests passing and travis-ci.org showing the project as green for
   all environments.

   For testing at each commit,

    > activate bscr-dev
    > pip install --upgrade .

 * Commit everything so the working copy of the feature branch is clean.

 * py.test

 * git checkout master

 * git merge FEATURE

 * py.test (fix and commit any failures with version updates as needed)

 * Update bscr/version.py to the current major version (YYYY.mmdd.0)

 * git commit

 * git tag -a YYYY.mmdd

 * git push --tags origin

 * Fetch the release from github and unpack it

 * activate bscr

 * pip install .

 * py.test
